/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package caro.client;

import caro.common.GPos;
import caro.common.CPiece;
import caro.common.KMessage;
import caro.common.Users;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Event;
import java.awt.Graphics;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.swing.JFrame.EXIT_ON_CLOSE;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;

/**
 *
 * @author kietdang
 */
public class Main extends javax.swing.JFrame implements inReceiveMessage{

    ListenServer listenServer;
    //PanelBoard windowPanel;
    
    JGoban Goban;
    JScrollPane jScroll;

    int GameState = 0;
    static final int WAIT = 0;
    static final int MY_TURN = 1;
    static final int YOU_WIN = 2;
    static final int YOU_LOSE = 3;
    /**
     * Creates new form Main
     */
    public Main(ListenServer listenServer) {
        initComponents();
       setTitle("Game Caro");
        
        setDefaultCloseOperation(EXIT_ON_CLOSE);
       //setSize(700, 565);
        
        
        setLayout(new BorderLayout());
        //windowPanel = new PanelBoard(socket);
        //add("Center", windowPanel);
        
        InitGame();
        setLocationRelativeTo(null);
        
        
        this.listenServer = listenServer;
        this.listenServer.receive = this;
        
        try {
            listenServer.SendMessage(28, null); //Lay thong tin 2 ng
            listenServer.SendMessage(30, null); //Lay thong tin 2 ng
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    void InitGame() {
        btncontinute.setEnabled(false);
        Goban = new JGoban();
        Goban.setPreferredSize(new Dimension(500,500));
        
        //jScroll = new JScrollPane(Goban);
        //Panel frame = new Panel();
        //frame.add(Goban);
        //panelCaro.add(Goban);
        panelCaro.setViewportView(Goban);

        Goban.Sakiyomi = true;
        Goban.Kinjite = true;

        Goban.init(500, 500);
        Goban.Initialize();
        Goban.Draw();
    }

    void putStatus(String strStt)
    {
        lblStatus.setText(strStt);
    }
    
    @Override
    public void paint(Graphics g) {
        super.paint(g); //To change body of generated methods, choose Tools | Templates.        

    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblName1 = new javax.swing.JLabel();
        lblName2 = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblScore1 = new javax.swing.JLabel();
        lblScore2 = new javax.swing.JLabel();
        txtChat = new javax.swing.JTextField();
        txtSendChat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ChatHistory = new javax.swing.JTextArea();
        btnExitRoom = new javax.swing.JButton();
        panelCaro = new javax.swing.JScrollPane();
        btncontinute = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblName1.setText("-- : --");

        lblName2.setText("-- : --");

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStatus.setText("Đợi người chơi thứ 2 nhé...");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("X");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("O");

        lblScore1.setText("Score: -- 0 --");

        lblScore2.setText("Score: -- 0 --");

        txtChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChatActionPerformed(evt);
            }
        });

        txtSendChat.setText("Send");
        txtSendChat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSendChatMouseClicked(evt);
            }
        });
        txtSendChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSendChatActionPerformed(evt);
            }
        });

        ChatHistory.setEditable(false);
        ChatHistory.setColumns(20);
        ChatHistory.setRows(5);
        jScrollPane1.setViewportView(ChatHistory);

        btnExitRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Close.png"))); // NOI18N
        btnExitRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExitRoomMouseClicked(evt);
            }
        });

        panelCaro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelCaroMouseClicked(evt);
            }
        });

        btncontinute.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/gtk-refresh.png"))); // NOI18N
        btncontinute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncontinuteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelCaro, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtChat, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSendChat, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblName2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblScore2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblName1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblScore1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btncontinute, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExitRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnExitRoom, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                            .addComponent(btncontinute, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName1)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblScore1)
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(lblName2))
                        .addGap(8, 8, 8)
                        .addComponent(lblScore2)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelCaro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(txtChat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSendChat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
///thoát khỏi phòng
    private void btnExitRoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitRoomMouseClicked
        // TODO add your handling code here:
        
        try {
            listenServer.SendMessage(39, null);   
            java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                    new RoomFrame(listenServer).setVisible(true);
                }
            });
            this.dispose();
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_btnExitRoomMouseClicked
///khi đánh cờ
    private void panelCaroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelCaroMouseClicked
        // TODO add your handling code here:
        int x = evt.getX();
        int y = evt.getY();
        
        if (GameState==MY_TURN)
        {
            GPos pos = new GPos();
            int offetX = Goban.getX();
            int offetY = Goban.getY();

            if( !Goban.GetPos(x-offetX,y-offetY,pos) )
                return;

            if(Goban.Pieces[pos.x][pos.y].State == CPiece.EMPTY)
            {
                try {
                    
                    GameState = WAIT;
                    putStatus("Vui lòng chờ người chơi vào...");
                    listenServer.SendMessage(30, pos);
                } catch (IOException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else
            {
                putStatus("Không được đánh vào vùng này!");
            }
        }

    }//GEN-LAST:event_panelCaroMouseClicked
////trò chuyện
    private void txtSendChatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSendChatMouseClicked
        // TODO add your handling code here:
        String strMess = listenServer.user.getUsername() + ": " + txtChat.getText();
        if (ChatHistory.getText().isEmpty())
            ChatHistory.setText(strMess);
        else
            ChatHistory.setText(ChatHistory.getText()+'\n'+strMess);
        txtChat.setText("");
        try {
            listenServer.SendMessage(40, strMess);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtSendChatMouseClicked

    private void btncontinuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncontinuteActionPerformed
//        // TODO add your handling code here:
//       setTitle("Game Caro");
//        
//        setDefaultCloseOperation(EXIT_ON_CLOSE);
//       //setSize(700, 565);
//        
//        
//        setLayout(new BorderLayout());
//        //windowPanel = new PanelBoard(socket);
//        //add("Center", windowPanel);
//        
//        InitGame();
//        setLocationRelativeTo(null);
//        
//        
//        this.listenServer = listenServer;
//        this.listenServer.receive = this;
//        
//        try {
//            listenServer.SendMessage(28, null); //Lay thong tin 2 ng
//            listenServer.SendMessage(30, null); //Lay thong tin 2 ng
//        } catch (IOException ex) {
//            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_btncontinuteActionPerformed

    private void txtSendChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSendChatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSendChatActionPerformed

    private void txtChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChatActionPerformed
        // TODO add your handling code here:
        String strMess = listenServer.user.getUsername() + ": " + txtChat.getText();
        if (ChatHistory.getText().isEmpty())
            ChatHistory.setText(strMess);
        else
            ChatHistory.setText(ChatHistory.getText()+'\n'+strMess);
        txtChat.setText("");
        try {
            listenServer.SendMessage(40, strMess);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtChatActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                System.out.println("CLIENT");
//                new Main(null).setVisible(true);
//            }
//        });
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new LoginForm().setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea ChatHistory;
    private javax.swing.JButton btnExitRoom;
    private javax.swing.JButton btncontinute;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblName2;
    private javax.swing.JLabel lblScore1;
    private javax.swing.JLabel lblScore2;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JScrollPane panelCaro;
    private javax.swing.JTextField txtChat;
    private javax.swing.JButton txtSendChat;
    // End of variables declaration//GEN-END:variables


    
    @Override
            public void ReceiveMessage(KMessage msg) throws IOException {
            switch (msg.getType()) {
                case 30: // lấy bàn cờ
                {
                    Goban.Pieces = (CPiece[][])msg.getObject();
                    Goban.Draw();

                    break;
                }
                case 31:
                {
                    putStatus("Tới lượt bạn");
                    GameState = MY_TURN;
                    break;
                }
                case 34: // Thong tin 2 ng choi
                {
                    Users[] arrUser = (Users[])msg.getObject();
                    if (arrUser!=null && arrUser.length>=2)
                    {
                        lblName1.setText(arrUser[0].getUsername());
                        lblScore1.setText("Score: "+arrUser[0].getScore());
                        lblName2.setText(arrUser[1].getUsername());
                        lblScore2.setText("Score:"+arrUser[1].getScore());
                    }
                    
                    break;
                }
                case 35:
                {
                     btncontinute.setEnabled(true);
                    if ("win".equalsIgnoreCase(msg.getObject().toString()))
                    {
                        GameState = YOU_WIN;
                        btncontinute.setEnabled(true);
                        JOptionPane.showMessageDialog(null, "Bạn đã tháng rồi. Chúc mừng", "Win", 1);
                      //putStatus("Ban da thang");
                    }
                    else if ("lose".equalsIgnoreCase(msg.getObject().toString()))
                    {
                       btncontinute.setEnabled(true);
                        GameState = YOU_LOSE;
                       JOptionPane.showMessageDialog(null, "Bạn đã thua rồi. Chia buồn nhé", "Failed", 1);
                    }
                    //System.out.println(msg.getObject());
                    break;
                }    
                case 36:
                {
                    putStatus("Đợi người chơi đánh...");

                    break;
                }   
                case 40: // Recieve Message
                {
                    String strMess = msg.getObject().toString();
                    if (ChatHistory.getText().isEmpty())
                        ChatHistory.setText(strMess);
                    else
                        ChatHistory.setText(ChatHistory.getText()+'\n'+strMess);
                    break;
                }   
            }
        }
}
